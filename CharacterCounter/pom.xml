<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.hk__lrzy</groupId>
    <artifactId>homework</artifactId>
    <packaging>war</packaging>
    <version>1.0.0-SNAPSHOT</version>


    <properties>
        <org.springframework.version>4.2.5.RELEASE</org.springframework.version>
        <cglib.version>3.1</cglib.version>
        <fastjson.version>1.1.35</fastjson.version>
        <junit.version>4.11</junit.version>
        <commons.io.version>2.4</commons.io.version>
        <slf4j.version>1.7.5</slf4j.version>
        <logback.version>1.1.7</logback.version>
        <servlet.version>2.5</servlet.version>
        <commons.fileupload.version>1.3.1</commons.fileupload.version>
        <jstl.version>1.2</jstl.version>
        <commons-httpclient.version>3.1</commons-httpclient.version>
        <hc.httpclient.version>4.3.1</hc.httpclient.version>
        <com.fasterxml.jackson.core.version>2.7.0-rc1</com.fasterxml.jackson.core.version>
    </properties>
    <dependencies>
        <!--util jar-->

        <!--servlet jar-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl.version}</version>
        </dependency>


        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${hc.httpclient.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${commons.fileupload.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>${commons-httpclient.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>



        <!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-instrument</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>${cglib.version}</version>
        </dependency>




        <!--log jar-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>


        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${com.fasterxml.jackson.core.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.3.0</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${servlet.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>



        <dependency>
            <groupId>org.jdom</groupId>
            <artifactId>jdom</artifactId>
        </dependency>

    </dependencies>

    <!--构建项目时候的参数-->
    <build>
        <finalName>${artifactId}-${version}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources/.${deploy.type}</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/resources/</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <!--源代码使用的开发版本-->
                    <source>1.8</source>
                    <!--要生成目标class文件的编译版本-->
                    <target>1.8</target>
                    <!--一般而言，target与source的版本要保持一致，但是为了让项目在其他的的JDK环境下运行，会存在target和source版本不一致的情况-->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!--在项目中构建profile，如果被激活，会修改构建处理 在这里配置了三种模式-->
    <profiles>
        <!--根据环境参数或者命令行参与激活某个构建处理-->
        <profile>
            <!--配置构建唯一的标识符。即用命令行激活，也用于在继承的时候合并具有相同标识符的profile-->
            <id>beta</id>
            <!--会触发profile的条件逻辑，Activation是profile的开启钥匙。profile的力量来自于它
                能够在某些特定的环境中自动使用某些特定的值；这些环境通过activation元素指定。
                activation元素并不是激活profile的唯一方式。-->
            <!--<activation></activation>-->
            <!--在激活profiles是的参数-->
            <properties>
                <deploy.type>beta</deploy.type>
            </properties>
        </profile>
        <profile>
            <id>development</id>
            <properties>
                <deploy.type>development</deploy.type>
            </properties>
        </profile>
        <profile>
            <id>production</id>
            <properties>
                <deploy.type>production</deploy.type>
            </properties>
        </profile>
    </profiles>


</project>